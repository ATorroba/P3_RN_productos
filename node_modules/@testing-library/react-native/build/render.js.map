{"version":3,"file":"render.js","names":["render","component","wrapper","Wrapper","createNodeMock","unstable_validateStringsRenderedWithinText","renderWithStringValidation","wrap","element","renderer","renderWithAct","undefined","buildRenderResult","handleRender","_","phase","validateStringsRenderedWithinText","screen","toJSON","update","updateWithAct","instance","root","unmount","act","addToCleanupQueue","result","getQueriesForElement","container","rerender","debug","setRenderResult","options","TestRenderer","create","debugImpl","message","json","debugDeep","shallow","debugShallow"],"sources":["../src/render.tsx"],"sourcesContent":["import TestRenderer from 'react-test-renderer';\nimport type { ReactTestInstance, ReactTestRenderer } from 'react-test-renderer';\nimport * as React from 'react';\nimport { Profiler } from 'react';\nimport act from './act';\nimport { addToCleanupQueue } from './cleanup';\nimport debugShallow from './helpers/debugShallow';\nimport debugDeep from './helpers/debugDeep';\nimport { getQueriesForElement } from './within';\nimport { setRenderResult, screen } from './screen';\nimport { validateStringsRenderedWithinText } from './helpers/stringValidation';\n\nexport type RenderOptions = {\n  wrapper?: React.ComponentType<any>;\n  createNodeMock?: (element: React.ReactElement) => any;\n  unstable_validateStringsRenderedWithinText?: boolean;\n};\n\ntype TestRendererOptions = {\n  createNodeMock: (element: React.ReactElement) => any;\n};\n\nexport type RenderResult = ReturnType<typeof render>;\n\n/**\n * Renders test component deeply using react-test-renderer and exposes helpers\n * to assert on the output.\n */\nexport default function render<T>(\n  component: React.ReactElement<T>,\n  {\n    wrapper: Wrapper,\n    createNodeMock,\n    unstable_validateStringsRenderedWithinText,\n  }: RenderOptions = {}\n) {\n  if (unstable_validateStringsRenderedWithinText) {\n    return renderWithStringValidation(component, {\n      wrapper: Wrapper,\n      createNodeMock,\n    });\n  }\n\n  const wrap = (element: React.ReactElement) =>\n    Wrapper ? <Wrapper>{element}</Wrapper> : element;\n\n  const renderer = renderWithAct(\n    wrap(component),\n    createNodeMock ? { createNodeMock } : undefined\n  );\n\n  return buildRenderResult(renderer, wrap);\n}\n\nfunction renderWithStringValidation<T>(\n  component: React.ReactElement<T>,\n  {\n    wrapper: Wrapper,\n    createNodeMock,\n  }: Omit<RenderOptions, 'unstable_validateStringsRenderedWithinText'> = {}\n) {\n  const handleRender: React.ProfilerProps['onRender'] = (_, phase) => {\n    if (phase === 'update') {\n      validateStringsRenderedWithinText(screen.toJSON());\n    }\n  };\n\n  const wrap = (element: React.ReactElement) => (\n    <Profiler id=\"renderProfiler\" onRender={handleRender}>\n      {Wrapper ? <Wrapper>{element}</Wrapper> : element}\n    </Profiler>\n  );\n\n  const renderer = renderWithAct(\n    wrap(component),\n    createNodeMock ? { createNodeMock } : undefined\n  );\n  validateStringsRenderedWithinText(renderer.toJSON());\n\n  return buildRenderResult(renderer, wrap);\n}\n\nfunction buildRenderResult(\n  renderer: ReactTestRenderer,\n  wrap: (element: React.ReactElement) => JSX.Element\n) {\n  const update = updateWithAct(renderer, wrap);\n  const instance = renderer.root;\n\n  const unmount = () => {\n    act(() => {\n      renderer.unmount();\n    });\n  };\n\n  addToCleanupQueue(unmount);\n\n  const result = {\n    ...getQueriesForElement(instance),\n    update,\n    unmount,\n    container: instance,\n    rerender: update, // alias for `update`\n    toJSON: renderer.toJSON,\n    debug: debug(instance, renderer),\n  };\n\n  setRenderResult(result);\n  return result;\n}\n\nfunction renderWithAct(\n  component: React.ReactElement,\n  options?: TestRendererOptions\n): ReactTestRenderer {\n  let renderer: ReactTestRenderer;\n\n  act(() => {\n    renderer = TestRenderer.create(component, options);\n  });\n\n  // @ts-ignore act is sync, so renderer is always initialised here\n  return renderer;\n}\n\nfunction updateWithAct(\n  renderer: ReactTestRenderer,\n  wrap: (innerElement: React.ReactElement) => React.ReactElement\n) {\n  return function (component: React.ReactElement) {\n    act(() => {\n      renderer.update(wrap(component));\n    });\n  };\n}\n\ninterface DebugFunction {\n  (message?: string): void;\n  shallow: (message?: string) => void;\n}\n\nfunction debug(\n  instance: ReactTestInstance,\n  renderer: ReactTestRenderer\n): DebugFunction {\n  function debugImpl(message?: string) {\n    const json = renderer.toJSON();\n    if (json) {\n      return debugDeep(json, message);\n    }\n  }\n  debugImpl.shallow = (message?: string) => debugShallow(instance, message);\n  return debugImpl;\n}\n"],"mappings":"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"}